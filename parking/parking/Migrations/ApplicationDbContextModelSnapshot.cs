// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using parking.Data;

#nullable disable

namespace parking.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.30")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("parking.Models.Occupation", b =>
                {
                    b.Property<string>("proprio_id")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("id_place")
                        .HasColumnType("int");

                    b.Property<string>("mt_matricule")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("mt_type")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("proprio_nom")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("randomPassword")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("proprio_id");

                    b.HasIndex("id_place");

                    b.ToTable("tb_occupation");
                });

            modelBuilder.Entity("parking.Models.Place", b =>
                {
                    b.Property<int>("num_place")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("disponible")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("type_place")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("num_place");

                    b.ToTable("tb_place");
                });

            modelBuilder.Entity("parking.Models.Reservation", b =>
                {
                    b.Property<int>("id_reservation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("date_debut")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("date_expiration")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("id_place")
                        .HasColumnType("int");

                    b.Property<string>("idproprio")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("id_reservation");

                    b.HasIndex("id_place");

                    b.HasIndex("idproprio");

                    b.ToTable("tb_reservation");
                });

            modelBuilder.Entity("parking.Models.Occupation", b =>
                {
                    b.HasOne("parking.Models.Place", "Place")
                        .WithMany()
                        .HasForeignKey("id_place")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Place");
                });

            modelBuilder.Entity("parking.Models.Reservation", b =>
                {
                    b.HasOne("parking.Models.Place", "Place")
                        .WithMany()
                        .HasForeignKey("id_place")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("parking.Models.Occupation", "Occupation")
                        .WithMany()
                        .HasForeignKey("idproprio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Occupation");

                    b.Navigation("Place");
                });
#pragma warning restore 612, 618
        }
    }
}
